/// <reference types="node" />
import FormData from "form-data";
import { RequestConfigBuilder, HttpMethod, Params, ProxyConfig } from "./http/HttpClientInterface";
import { BasicAuth, DiscriminatedAuth } from "./types/auth";
declare type Data = Params | FormData;
export declare class KintoneRequestConfigBuilder implements RequestConfigBuilder {
    private baseUrl;
    private headers;
    private auth;
    private clientCertAuth?;
    private proxy?;
    private requestToken;
    constructor({ baseUrl, auth, basicAuth, clientCertAuth, proxy, userAgent, }: {
        baseUrl: string;
        auth: DiscriminatedAuth;
        basicAuth?: BasicAuth;
        clientCertAuth?: {
            pfx: Buffer;
            password: string;
        } | {
            pfxFilePath: string;
            password: string;
        };
        proxy?: ProxyConfig;
        userAgent?: string;
    });
    build(method: HttpMethod, path: string, params: Data, options?: {
        responseType: "arraybuffer";
    }): Promise<{
        url: string;
        method: HttpMethod;
        headers: any;
        httpsAgent?: any;
        data?: any;
        proxy?: ProxyConfig | undefined;
    }>;
    private buildRequestUrl;
    private buildData;
    private buildHeaders;
    private getRequestToken;
}
export {};
